%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 程序功能：
% ZCG或标定系统数据处理程序需要的输入参数

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
TotalSoundLevelLineFreqStart = 20;      % 总声级曲线起算频率
TotalSoundLevelLineFreqStop  = 5000;    % 总声级曲线终算频率
TimeFreqRange  = 10000;         % 时频图显示频率范围

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
if Device
    Vref = 10;  % 测量时设置的满量程电压值
else
    Vref = 2.5; % 测量时设置的满量程电压值
end

Gain = 10;      % 信号调理模块增益   Gain = 10;  
SampleRate = 105440;    % 系统采样率

FreqRange = [20 500;500 1000;20 1000;20 5000;20 10000;20 50000];      % 总声级计算频率范围

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% ButtonName = questdlg('选择窗函数','选择窗函数','凯撒窗','汉宁窗','三角窗','汉宁窗');
% if strcmp(ButtonName,'汉宁窗')==1
%     win = 'hann';
% elseif strcmp(ButtonName,'凯撒窗')==1
%     win = 'kaiser';
% elseif strcmp(ButtonName,'三角窗')==1
%     win = 'bartlett';
% end

win = 'hann';
nfft = SampleRate;
Hs = spectrum.welch(win,nfft,0.5);      % 设置功率谱计算参数
    %需要加窗以减小泄露
    %{
    韦尔奇光谱:返回一个默认的韦尔奇光谱对象 ，该对象定义了韦尔奇的平均值、改进的周期图光谱估计方法的参数
        win:
        nfft:输入信号被划分为的每个基于时间的段的长度。在每个段上计算修改后的周期图，
        周期图的平均值形成光谱估计值。选择段长度是估计可靠性（较短的段）和频率分辨率
        （较长的段）之间的折衷。较长的线段长度可产生更好的分辨率，而较短的线段长度可产生更多的平均值，从而降低方差。
        0.5:区段之间的重叠百分比
    %}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 根据灵敏度文件来计算1/3oct的频段的高频点低频点
OctFreq = [10;12.5;16;20;25;31.5;40;50;63;80;100;125;160;200;250;315;400;500;630;800;1000;1250;1600;2000;2500;3150;4000;5000;6300;8000;10000;12500;16000;20000;25000;31500;40000;50000;63000;80000;100000;125000;160000;200000];
OctFreqLow  = OctFreq / power(2.0,1.0/6.0);
    %power:按元素求幂
OctFreqHigh = OctFreq * power(2.0,1.0/6.0);
OctFreqLow  = round(OctFreqLow);
    %四舍五入为最近的小数或整数
OctFreqHigh = [OctFreqLow(2:end)-1;round(OctFreqHigh(end))];
OctFreqDe = OctFreqHigh-OctFreqLow+1;




